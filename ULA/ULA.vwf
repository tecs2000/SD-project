/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 1000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("A")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("A[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "A";
}

SIGNAL("A[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "A";
}

SIGNAL("A[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "A";
}

SIGNAL("A[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "A";
}

SIGNAL("B")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("B[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "B";
}

SIGNAL("B[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "B";
}

SIGNAL("B[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "B";
}

SIGNAL("B[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "B";
}

SIGNAL("S")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("S[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "S";
}

SIGNAL("S[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "S";
}

SIGNAL("S[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "S";
}

SIGNAL("Overflow")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Status")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("HEX0_D")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("HEX0_D[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX0_D";
}

SIGNAL("HEX0_D[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX0_D";
}

SIGNAL("HEX0_D[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX0_D";
}

SIGNAL("HEX0_D[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX0_D";
}

SIGNAL("HEX0_D[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX0_D";
}

SIGNAL("HEX0_D[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX0_D";
}

SIGNAL("HEX0_D[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX0_D";
}

SIGNAL("HEX1_D")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("HEX1_D[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX1_D";
}

SIGNAL("HEX1_D[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX1_D";
}

SIGNAL("HEX1_D[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX1_D";
}

SIGNAL("HEX1_D[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX1_D";
}

SIGNAL("HEX1_D[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX1_D";
}

SIGNAL("HEX1_D[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX1_D";
}

SIGNAL("HEX1_D[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX1_D";
}

TRANSITION_LIST("A[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
			NODE
			{
				REPEAT = 998;
				LEVEL 0 FOR 0.5;
				LEVEL 1 FOR 0.5;
			}
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
	}
}

TRANSITION_LIST("A[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 1.0;
			NODE
			{
				REPEAT = 498;
				LEVEL 0 FOR 1.0;
				LEVEL 1 FOR 1.0;
			}
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 1.0;
		}
	}
}

TRANSITION_LIST("A[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
			NODE
			{
				REPEAT = 248;
				LEVEL 0 FOR 2.0;
				LEVEL 1 FOR 2.0;
			}
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
	}
}

TRANSITION_LIST("A[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
			NODE
			{
				REPEAT = 123;
				LEVEL 0 FOR 4.0;
				LEVEL 1 FOR 4.0;
			}
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
		}
	}
}

TRANSITION_LIST("B[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 8.0;
			NODE
			{
				REPEAT = 61;
				LEVEL 0 FOR 8.0;
				LEVEL 1 FOR 8.0;
			}
			LEVEL 0 FOR 8.0;
		}
	}
}

TRANSITION_LIST("B[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 16.0;
			LEVEL 1 FOR 16.0;
			NODE
			{
				REPEAT = 30;
				LEVEL 0 FOR 16.0;
				LEVEL 1 FOR 16.0;
			}
			LEVEL 0 FOR 8.0;
		}
	}
}

TRANSITION_LIST("B[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 32.0;
			LEVEL 1 FOR 32.0;
			NODE
			{
				REPEAT = 14;
				LEVEL 0 FOR 32.0;
				LEVEL 1 FOR 32.0;
			}
			LEVEL 0 FOR 32.0;
			LEVEL 1 FOR 8.0;
		}
	}
}

TRANSITION_LIST("B[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 64.0;
			LEVEL 1 FOR 64.0;
			NODE
			{
				REPEAT = 6;
				LEVEL 0 FOR 64.0;
				LEVEL 1 FOR 64.0;
			}
			LEVEL 0 FOR 64.0;
			LEVEL 1 FOR 40.0;
		}
	}
}

TRANSITION_LIST("S[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 128.0;
			LEVEL 1 FOR 128.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 128.0;
				LEVEL 1 FOR 128.0;
			}
			LEVEL 0 FOR 128.0;
			LEVEL 1 FOR 104.0;
		}
	}
}

TRANSITION_LIST("S[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 256.0;
			LEVEL 1 FOR 256.0;
			LEVEL 0 FOR 256.0;
			LEVEL 1 FOR 232.0;
		}
	}
}

TRANSITION_LIST("S[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 512.0;
			LEVEL 1 FOR 488.0;
		}
	}
}

TRANSITION_LIST("Overflow")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 11.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 6.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 5.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 4.5;
		LEVEL 1 FOR 3.5;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 3.5;
		LEVEL 0 FOR 4.5;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 5.5;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 6.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 15.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 7.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 6.5;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 5.5;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 3.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.5;
		LEVEL 1 FOR 3.5;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 5.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 7.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 68.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 67.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 6.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 5.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 4.5;
		LEVEL 1 FOR 3.5;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 3.5;
		LEVEL 0 FOR 4.5;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 5.5;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 6.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 15.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 7.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 6.5;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 5.5;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 3.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.5;
		LEVEL 1 FOR 3.5;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 5.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 7.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 68.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 32.0;
	}
}

TRANSITION_LIST("Status")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 15;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 8.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 1.0;
			NODE
			{
				REPEAT = 14;
				LEVEL 0 FOR 8.0;
				LEVEL 1 FOR 0.5;
			}
			LEVEL 0 FOR 8.0;
		}
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 15;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 3.5;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 5.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 7.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 7.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 6.5;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 5.5;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 4.5;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 4.5;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 5.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 7.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 7.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 6.5;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 5.5;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 3.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 3.5;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 5.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 7.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 7.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 6.5;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 5.5;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 4.5;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 4.5;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 5.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 7.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 7.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 6.5;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
	}
}

TRANSITION_LIST("HEX0_D[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 4.5;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 5.5;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 6.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 3.5;
		LEVEL 0 FOR 11.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 6.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 5.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 4.5;
		LEVEL 1 FOR 3.5;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 4.5;
		LEVEL 1 FOR 3.5;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 3.0;
		LEVEL 0 FOR 5.5;
		LEVEL 1 FOR 2.5;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 7.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 12.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 7.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 6.5;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 6.0;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 5.5;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 8.5;
		LEVEL 0 FOR 56.0;
		LEVEL 1 FOR 72.0;
		LEVEL 0 FOR 56.0;
		LEVEL 1 FOR 132.0;
		NODE
		{
			REPEAT = 15;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
		}
		LEVEL 0 FOR 8.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 72.0;
		NODE
		{
			REPEAT = 15;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 4.0;
		}
		LEVEL 0 FOR 8.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 4.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 4.0;
	}
}

TRANSITION_LIST("HEX0_D[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("HEX0_D[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("HEX0_D[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("HEX0_D[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("HEX0_D[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("HEX0_D[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("HEX1_D[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 1.5;
		}
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 1.5;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 1.5;
		}
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 3.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 1.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 1.5;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 1.5;
		}
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 1.5;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 1.5;
		}
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 17.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 24.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 25.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 1.0;
		}
		LEVEL 0 FOR 1.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 3.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 4.5;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 1.5;
		}
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 18.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 1.0;
		}
		LEVEL 0 FOR 1.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 2.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 3.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 4.5;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 4.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 1.5;
		}
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("HEX1_D[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 3.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.5;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.5;
			LEVEL 1 FOR 1.5;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 1.0;
		}
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 0.5;
				LEVEL 1 FOR 1.5;
			}
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 1.5;
				LEVEL 0 FOR 0.5;
			}
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.5;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 1.5;
			LEVEL 0 FOR 1.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 2.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 1.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 1.5;
			LEVEL 0 FOR 0.5;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 0.5;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 1.5;
		}
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 1.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 1.5;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 2.0;
			LEVEL 0 FOR 1.5;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.5;
		}
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 8.5;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 8.5;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
		}
		LEVEL 1 FOR 0.5;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 1.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 1.5;
		}
		LEVEL 0 FOR 8.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 1.0;
		}
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 8.5;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
		}
		LEVEL 1 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 1.0;
		}
		LEVEL 0 FOR 4.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 1.5;
			LEVEL 0 FOR 0.5;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 9.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.5;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 2.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 1.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
		}
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 1.5;
			LEVEL 0 FOR 0.5;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 1.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 2.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
		}
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 9.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
		}
		LEVEL 1 FOR 0.5;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 1.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 1.5;
		}
		LEVEL 0 FOR 8.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 1.0;
		}
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 8.5;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
		}
		LEVEL 1 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 1.0;
		}
		LEVEL 0 FOR 4.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 1.5;
			LEVEL 0 FOR 0.5;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 9.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.5;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 2.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 1.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
		}
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 1.5;
			LEVEL 0 FOR 0.5;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 1.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
	}
}

TRANSITION_LIST("HEX1_D[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 2.0;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 0.5;
				LEVEL 1 FOR 0.5;
			}
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 1.5;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 0.5;
				LEVEL 1 FOR 0.5;
			}
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 1.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 2.0;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 0.5;
				LEVEL 1 FOR 0.5;
			}
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 1.5;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 0.5;
				LEVEL 1 FOR 0.5;
			}
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 1.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 1.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 1.5;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 0.5;
				LEVEL 1 FOR 0.5;
			}
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 2.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 0.5;
				LEVEL 1 FOR 0.5;
			}
			LEVEL 0 FOR 0.5;
		}
		LEVEL 1 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 2.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 1.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 1.5;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 0.5;
				LEVEL 1 FOR 0.5;
			}
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 2.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 0.5;
				LEVEL 1 FOR 0.5;
			}
			LEVEL 0 FOR 0.5;
		}
		LEVEL 1 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 2.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 8.5;
		LEVEL 1 FOR 8.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 8.0;
			LEVEL 1 FOR 24.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 8.0;
				LEVEL 1 FOR 8.0;
			}
		}
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 24.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 8.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 8.5;
			NODE
			{
				REPEAT = 7;
				LEVEL 1 FOR 0.5;
				LEVEL 0 FOR 0.5;
			}
			LEVEL 1 FOR 0.5;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 2.5;
		}
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 8.5;
			NODE
			{
				REPEAT = 7;
				LEVEL 1 FOR 0.5;
				LEVEL 0 FOR 0.5;
			}
		}
		LEVEL 1 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 2.5;
		}
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 0.5;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 1.5;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 0.5;
				LEVEL 1 FOR 0.5;
			}
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 1.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 1.5;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 0.5;
				LEVEL 1 FOR 0.5;
			}
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 2.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 0.5;
				LEVEL 1 FOR 0.5;
			}
			LEVEL 0 FOR 0.5;
		}
		LEVEL 1 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 2.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 1.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 1.5;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 0.5;
				LEVEL 1 FOR 0.5;
			}
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 2.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 0.5;
				LEVEL 1 FOR 0.5;
			}
			LEVEL 0 FOR 0.5;
		}
		LEVEL 1 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 2.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 9.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 8.5;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
		}
		LEVEL 1 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 2.5;
		}
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 8.5;
			NODE
			{
				REPEAT = 7;
				LEVEL 1 FOR 0.5;
				LEVEL 0 FOR 0.5;
			}
		}
		LEVEL 1 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 2.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 2.5;
		}
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 0.5;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 1.5;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 0.5;
				LEVEL 1 FOR 0.5;
			}
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 1.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 1.5;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 0.5;
				LEVEL 1 FOR 0.5;
			}
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 2.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 0.5;
				LEVEL 1 FOR 0.5;
			}
			LEVEL 0 FOR 0.5;
		}
		LEVEL 1 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 2.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 1.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 1.5;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 0.5;
				LEVEL 1 FOR 0.5;
			}
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 2.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 0 FOR 0.5;
				LEVEL 1 FOR 0.5;
			}
			LEVEL 0 FOR 0.5;
		}
		LEVEL 1 FOR 1.5;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
		}
	}
}

TRANSITION_LIST("HEX1_D[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 0.5;
				LEVEL 0 FOR 1.0;
			}
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 0.5;
				LEVEL 0 FOR 0.5;
			}
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 0.5;
				LEVEL 0 FOR 1.0;
			}
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 0.5;
				LEVEL 0 FOR 0.5;
			}
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 0.5;
				LEVEL 0 FOR 1.0;
			}
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 0.5;
				LEVEL 0 FOR 0.5;
			}
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 0.5;
				LEVEL 0 FOR 1.0;
			}
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 0.5;
				LEVEL 0 FOR 0.5;
			}
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 0.5;
				LEVEL 0 FOR 1.0;
			}
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 0.5;
				LEVEL 0 FOR 1.0;
			}
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 0.5;
				LEVEL 0 FOR 1.0;
			}
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 0.5;
				LEVEL 0 FOR 1.0;
			}
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 8.5;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 8.0;
				LEVEL 0 FOR 16.0;
			}
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 8.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 16.0;
		}
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 8.0;
			LEVEL 0 FOR 16.0;
		}
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.5;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 8.5;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.5;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 8.5;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 8.5;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.5;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 0.5;
				LEVEL 0 FOR 1.0;
			}
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 9.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 8.5;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.5;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 8.5;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 8.5;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.5;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 0.5;
				LEVEL 0 FOR 1.0;
			}
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("HEX1_D[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 5.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 4;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 0.5;
				LEVEL 0 FOR 1.5;
			}
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 3.0;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 3.5;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 3.0;
		}
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 0.5;
				LEVEL 0 FOR 1.5;
			}
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 3.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.5;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 3.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.5;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 5.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 5.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 5.5;
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.5;
			LEVEL 1 FOR 0.5;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 0.5;
				LEVEL 0 FOR 1.5;
			}
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.5;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 3.5;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 3.5;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 4.0;
		}
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 0.5;
				LEVEL 0 FOR 1.5;
			}
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 4.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.5;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.5;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 5.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 5.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 17.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 88.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 88.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 25.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 1.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.5;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 17.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 3.0;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 19.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 21.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 5.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 5.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 5.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 5.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 5.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.5;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.5;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.5;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 5.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 5.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 5.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 5.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 18.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 1.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.5;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 17.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 3.0;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 19.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 21.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 5.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 5.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 5.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 5.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 5.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.5;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.5;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 6.0;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.5;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 6.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 5.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
	}
}

TRANSITION_LIST("HEX1_D[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2.5;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 1.5;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 4.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 6.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 1.0;
		}
		LEVEL 0 FOR 1.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 2.5;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 3.0;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 6.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 1.5;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 7.5;
		}
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 7.5;
			LEVEL 1 FOR 1.0;
		}
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 1.5;
			LEVEL 1 FOR 1.0;
		}
		LEVEL 0 FOR 42.5;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 72.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 24.0;
		LEVEL 1 FOR 16.0;
		LEVEL 0 FOR 74.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 1.0;
		}
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 21.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 10.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 4.5;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 1.5;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 5.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 5.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 4.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 4.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 5.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 5.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 45.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 1.0;
		}
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 21.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 10.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 4.5;
			LEVEL 1 FOR 1.0;
			LEVEL 0 FOR 1.5;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 4.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 5.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 5.5;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 4.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 4.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.5;
		LEVEL 0 FOR 5.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 2.5;
	}
}

TRANSITION_LIST("HEX1_D[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 2.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 0.5;
				LEVEL 0 FOR 1.0;
			}
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 0.5;
				LEVEL 0 FOR 0.5;
			}
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 3.0;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 0.5;
				LEVEL 0 FOR 1.0;
			}
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.5;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 3.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.5;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 0.5;
				LEVEL 0 FOR 1.0;
			}
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.5;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 0.5;
				LEVEL 0 FOR 1.0;
			}
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 2.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 0.5;
				LEVEL 0 FOR 0.5;
			}
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.5;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 0.5;
				LEVEL 0 FOR 1.0;
			}
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 0.5;
				LEVEL 0 FOR 1.0;
			}
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 2.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 2.5;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 0.5;
				LEVEL 0 FOR 1.0;
			}
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 0.5;
				LEVEL 0 FOR 1.0;
			}
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.5;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 8.5;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 56.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 56.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 8.0;
		LEVEL 0 FOR 8.5;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 8.5;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.5;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 12.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 9.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 8.5;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.5;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 12.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 7.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 2.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 3.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 2.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 1.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.0;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 0.5;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
			LEVEL 1 FOR 0.5;
		}
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 3.5;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.5;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 1.0;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 2.0;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 1.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.5;
			LEVEL 0 FOR 2.0;
		}
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 1.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "A";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
	CHILDREN = 1, 2, 3, 4;
}

DISPLAY_LINE
{
	CHANNEL = "A[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 1;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "B";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
	CHILDREN = 6, 7, 8, 9;
}

DISPLAY_LINE
{
	CHANNEL = "B[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "B[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "B[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "B[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "S";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
	CHILDREN = 11, 12, 13;
}

DISPLAY_LINE
{
	CHANNEL = "S[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "S[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "S[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "Overflow";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Status";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "HEX0_D";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 0;
	CHILDREN = 17, 18, 19, 20, 21, 22, 23;
}

DISPLAY_LINE
{
	CHANNEL = "HEX0_D[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 16;
}

DISPLAY_LINE
{
	CHANNEL = "HEX0_D[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 16;
}

DISPLAY_LINE
{
	CHANNEL = "HEX0_D[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 16;
}

DISPLAY_LINE
{
	CHANNEL = "HEX0_D[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 16;
}

DISPLAY_LINE
{
	CHANNEL = "HEX0_D[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 16;
}

DISPLAY_LINE
{
	CHANNEL = "HEX0_D[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 16;
}

DISPLAY_LINE
{
	CHANNEL = "HEX0_D[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 16;
}

DISPLAY_LINE
{
	CHANNEL = "HEX1_D";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 24;
	TREE_LEVEL = 0;
	CHILDREN = 25, 26, 27, 28, 29, 30, 31;
}

DISPLAY_LINE
{
	CHANNEL = "HEX1_D[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "HEX1_D[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "HEX1_D[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "HEX1_D[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "HEX1_D[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "HEX1_D[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "HEX1_D[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 24;
}

TIME_BAR
{
	TIME = 27350;
	MASTER = TRUE;
}
;
